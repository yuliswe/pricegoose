FROM ubuntu:18.04

ENV LC_ALL C.UTF-8
ENV LANG C.UTF-8
ENV LANGUAGE C.UTF-8
ENV DEBIAN_FRONTEND noninteractive

RUN apt-get update --fix-missing && apt-get install -y \
    curl ca-certificates gnupg\
    python3.8 python3-pip \
    # ui testing
    libnss3 chromium-browser \
    # manage graph_models
    graphviz libgraphviz-dev python3.8-dev \
    wait-for-it && \
    # link chrome
    ln -s /usr/bin/chromium-browser /usr/bin/chrome && \
    # install nodejs, yarn
    (curl -sL https://deb.nodesource.com/setup_13.x | bash -) && \
    (curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add -) && \
    (echo "deb https://dl.yarnpkg.com/debian/ stable main" | tee /etc/apt/sources.list.d/yarn.list) && \
    (apt-get update && apt-get install -y yarn) && \
    # install postgres 12
    (curl https://www.postgresql.org/media/keys/ACCC4CF8.asc | apt-key add -) && \
    (echo deb http://apt.postgresql.org/pub/repos/apt/ bionic-pgdg main > /etc/apt/sources.list.d/pgdg.list) && \
    (apt update && apt install -y postgresql-client-12) && \
    apt-get autoremove && apt-get clean

# Base settings
ENV SITE_ROOT /root/site
ENV BIN_DIR ${SITE_ROOT}/bin
# var directory contains files generated by containers but is not reproducible
ENV VAR_DIR /root/var
# tmp directory contains files generated by containers and is reproducible
ENV TMP_DIR /root/tmp
# share directory is used for sharing files from host quickly
ENV SHARE_DIR /root/share

# File generation destinations
ENV UI_NODE_MODULES_DIR ${TMP_DIR}/npm/web/node_modules
ENV TEST_NODE_MODULES_DIR ${TMP_DIR}/npm/test/node_modules
ENV MIGRATION_MODULE_DIR ${VAR_DIR}/migrations
ENV STATIC_FILES_DIR ${TMP_DIR}/static

# Config file locations
ENV WEBPACK_CONF_PATH ${SITE_ROOT}/src/web
ENV UI_NPM_JSON_PATH ${SITE_ROOT}/src/web
ENV TEST_NPM_JSON_PATH ${SITE_ROOT}/tests/ui

# environment variables required by other softwares
ENV NODE_PATH ${UI_NODE_MODULES_DIR}:${NODE_PATH}
ENV NODE_PATH ${TEST_NODE_MODULES_DIR}:${NODE_PATH}
ENV PYTHONPATH ${SITE_ROOT}:${PYTHONPATH}
ENV PYTHONPATH ${MIGRATION_MODULE_DIR}/../:${PYTHONPATH}
ENV PYTHONSTARTUP ${SITE_ROOT}/.startup.py
ENV PATH ${UI_NODE_MODULES_DIR}/.bin:${PATH}
ENV PATH ${TEST_NODE_MODULES_DIR}/.bin:${PATH}
ENV PATH ${BIN_DIR}:${PATH}


# install source
COPY . ${SITE_ROOT}

RUN mkdir -p ${VAR_DIR} ${TMP_DIR} ${SHARE_DIR} ${SITE_ROOT} && \
    chmod gu+x -R ${BIN_DIR} && pipref && yarnref --ci && webpackref

# set up supervisord
# RUN cp ${SITE_ROOT}/supervisord.conf /etc/supervisor/conf.d/supervisord.conf
# CMD supervisord -n -c /etc/supervisor/conf.d/supervisord.conf
CMD [ "boot" ]
